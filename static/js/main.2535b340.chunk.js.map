{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2535b340.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\n// const app = initializeApp(firebaseConfig);\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n        if (newAccount) {\n            // create newAccount\n            data = await authService.createUserWithEmailAndPassword(email, password);\n        } else {\n            // log in\n            data = await authService.signInWithEmailAndPassword(email, password);\n        }\n        // console.log(data);\n    } catch (error) {\n        // console.log(error);\n        setError(error.message);\n    }\n    };\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input \n                name = \"email\"\n                type=\"email\" \n                placeholder=\"Email\" \n                required \n                value={email}\n                onChange={onChange}\n                />\n                <input \n                name = \"password\"\n                type=\"password\" \n                placeholder=\"Password\" \n                required \n                value={password}\n                onChange={onChange}\n                />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error}\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\n\n\nconst Auth = () => {\n\n    const onSocialClick = async (event) => {\n       // console.log(event.target.name);\n       const {\n           target: {name},\n       } = event;\n       let provider;\n       if (name === \"google\") {\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\n       } else if (name === \"github\") {\n           provider = new firebaseInstance.auth.GithubAuthProvider();\n       }\n       const data = await authService.signInWithPopup(provider);\n       // console.log(data);\n    };\n\n    \n    return (\n        <div>\n            <AuthForm />\n        <div>\n            <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n            <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n        </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst Nweet =({ nweetObj, isOwner }) => {\n\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        // console.log(ok);\n        if (ok) {\n            // console.log(nweetObj.id);\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            // console.log(data);\n            if (nweetObj.attachmentUrl !==\"\")\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        // console.log(nweetObj.id, newNweet);\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n        setEditing(false);\n    };\n\n    return (\n        <div>\n            {editing ? (\n                <>\n                <form onSubmit={onSubmit}>\n                    <input onChange={onChange} value={newNweet} required />\n                    <input type=\"submit\" value=\"Update Nweet\" />\n                </form>\n                <button onClick={toggleEditing}>Cancel</button>\n                </>                \n            ) : (\n                <>\n            <h4>{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && (\n                <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n            )}\n            {isOwner && (\n            <>\n            <button onClick={onDeleteClick}>Delete Nweet</button>\n            <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n            )}\n            </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","\nimport { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst NweetFactory = ({ userObj }) => {\n\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !==\"\") {\n        const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentUrl = await response.ref.getDownloadURL();\n        }\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n        // console.log(await response.ref.getDownloadURL());\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        // console.log(event.target.files);\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            // console.log(finishedEvent);\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    }\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n\nreturn (\n    <form onSubmit={onSubmit}>\n            <input\n            value={nweet}\n            onChange={onChange}\n            target=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n            />\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n            <input type=\"submit\" value=\"Nweet\" />\n            {attachment && (\n            <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n            </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n    // console.log(userObj);\n    \n    const [nweets, setNweets] = useState([]);\n    \n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const newArray = snapshot.docs.map((document) => ({\n                id: document.id,\n                ...document.data(),\n            }));\n            setNweets(newArray);\n        });\n    }, []);\n\n    // console.log(nweets);\n\n    return (\n        <>\n        <NweetFactory userObj={userObj} />\n        <div>\n            {nweets.map((nweet) => (\n                <Nweet \n                key={nweet.id} \n                nweetObj={nweet}\n                isOwner={nweet.creatorId === userObj.uid}\n                />\n\n            ))}\n        </div>\n        </>\n    );\n};\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({ displayName: newDisplayName });\n            refreshUser();\n        }\n    };\n\n    /* const getMyNweets = async () => {\n        const nweets = await dbService\n        .collection(\"nweets\")\n        .where(\"creatorId\", \"==\", userObj.uid)\n        .orderBy(\"createdAt\", \"asc\")\n        .get();\n\n        console.log(nweets.docs.map((doc) => doc.data()));\n    };\n\n    useEffect(() => {\n        getMyNweets();\n    },[]); */\n\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input \n            onChange={onChange} \n            type=\"text\" \n            placeholder=\"Display name\"\n            value={newDisplayName} \n            />\n            <input type=\"submit\" value=\"Update Profile\" />\n        </form>\n        <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    );\n};\n\nexport default Profile;","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser }) => {\n    // const [isLoggedIn, setIsLoggedIn] = useState(true);\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                    <Route exact path=\"/\">\n                        <Home userObj={userObj}/>\n                    </Route>\n                    <Route exact path=\"/profile\">\n                        <Profile refreshUser={refreshUser} userObj={userObj} />\n                    </Route>\n                    </>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )}\n                \n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // setIsLoggedIn(false);\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  // setInterval(() => console.log(authService.currentUser), 2000);\n  // console.log(authService.currentUser);\n\n  const refreshUser =() => {\n    // setUserObj(authService.currentUser);\n    const user = authService.currentUser;\n    setUserObj ({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n    {init ? ( \n    <AppRouter\n    refreshUser={refreshUser} \n    isLoggedIn={Boolean(userObj)} \n    userObj={userObj} /> \n    ) : ( \"initializing...\"\n    )}\n    \n    </>\n    // <div>App</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n// import firebase from \"./firebase\";\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}